Spring - Introduction and Architecture
Sol. Spring : Spring is a dependency injection framework that promotes loosely coupled code.It is an open source java 
application framework, which is based on two key principles:dependency injection and Inversion of control.
    Spring has the ability to autowire the dependency at runtime,which allows the developer to write loosely coupled 
    code. Spring framework uses metadata in the form of xml file or java annotations to create objects and identifies 
    dependencies, thereby producing a ready to use application.
    Spring inverts the control by taking responsibility for populating the dependency.This is referred to as Inversion 
    of Control(IoC).

    Spring Architecture : Components of Spring Architecture:
    * Data Access/Integration : Spring has a very good Integration with data and integrations layers, and provides 
    support to interact with databases. It contains modules like JDBC,ORM,OXM,JMS and Transaction.
    * Web : It contains the Web, Servlets, Portlets, and Sockets modules to support the creation of a web application.
    Spring offers a web framework of its own called Spring MVA
    * Test : The test module handles the cross cutting concern of unit testing. The Spring test framework supports 
    testing with Junit,TestNG, as well as creating mock objects for testing the code isolation.
    * Spring Core Container
    *AOP : The AOP module provides Aspect Oriented Programming functionality like method interception and point cuts as 
    well as security and logging features.Spring has its own module called Spring AOP that offers basic, aspect-oriented 
    programming functionality.Advanced AOP functionality can be implemented through integration with AspectJ.AOP features 
    cross cutting concerns from business logic. 

Spring - IoC Containers
Sol. IoC Containers : An IoC Container is a framework that provides the Inversion of Control functionality.The IoC 
container manages the beans.Spring offers two implementations of the Ioc Container.:
                        * Bean factory
                        * Application context

Spring - Bean Definition
Sol. Bean :Beans are the objects of classes that are managed by spring.Traditionally, objects are used to create their 
own dependencies, but spring manages all the dependencies of an object and instantiates the object after injecting the 
required dependencies.The @Component annotation is the most common method of defining beans.
        Syntax:
        @Component
        public class vehicle{}

Spring - Bean Scopes 

Spring - Bean Life Cycle